extern print_int(val: i32);
extern print_clean(msg: str);

func main(): void {
    print_clean("=== DEBUGGING MODULO AND DIVISION ===\n");
    
    // Test the exact calculation from complex_expressions(1, 0, 0)
    let a: i32 = 1;
    let b: i32 = 0;
    let c: i32 = 0;
    
    print_clean("a = 1, b = 0, c = 0\n");
    
    let sum_ab: i32 = a + b;
    print_clean("a + b = ");
    print_int(sum_ab);
    print_clean("\n");
    
    let product: i32 = sum_ab * c;
    print_clean("(a + b) * c = ");
    print_int(product);
    print_clean("\n");
    
    let diff_ab: i32 = a - b;
    print_clean("a - b = ");
    print_int(diff_ab);
    print_clean("\n");
    
    let numerator: i32 = product - diff_ab;
    print_clean("numerator = ");
    print_int(numerator);
    print_clean("\n");
    
    let c_plus_1: i32 = c + 1;
    print_clean("c + 1 = ");
    print_int(c_plus_1);
    print_clean("\n");
    
    let mod_result: i32 = c_plus_1 % 3;
    print_clean("(c + 1) % 3 = ");
    print_int(mod_result);
    print_clean("\n");
    
    let denominator: i32 = mod_result + 1;
    print_clean("denominator = ");
    print_int(denominator);
    print_clean("\n");
    
    let final_result: i32 = numerator / denominator;
    print_clean("final result (-1/2) = ");
    print_int(final_result);
    print_clean("\n");
    
    // Test modulo with other values
    print_clean("\nModulo tests:\n");
    print_clean("-10 % 3 = ");
    print_int(-10 % 3);
    print_clean("\n");
    
    print_clean("10 % -3 = ");
    print_int(10 % -3);
    print_clean("\n");
}
