extern print_int(val: i32);
extern print_clean(msg: str);

func main(): void {
    print_clean("=== COMPARISON AND LOGICAL EDGE CASES ===\n");
    
    // Edge cases for comparisons
    let max_val: i32 = 2147483647;
    let min_val: i32 = -2147483648;
    
    print_clean("Max == Max: ");
    if max_val == max_val {
        print_int(1);
    } else {
        print_int(0);
    }
    print_clean("\n");
    
    print_clean("Min == Min: ");
    if min_val == min_val {
        print_int(1);
    } else {
        print_int(0);
    }
    print_clean("\n");
    
    print_clean("Max > Min: ");
    if max_val > min_val {
        print_int(1);
    } else {
        print_int(0);
    }
    print_clean("\n");
    
    print_clean("Min < Max: ");
    if min_val < max_val {
        print_int(1);
    } else {
        print_int(0);
    }
    print_clean("\n");
    
    // Complex logical operations
    print_clean("Complex AND: ");
    if (max_val > 0) && (min_val < 0) && (max_val != min_val) {
        print_int(1);
    } else {
        print_int(0);
    }
    print_clean("\n");
    
    print_clean("Complex OR: ");
    if (max_val < 0) || (min_val > 0) || (max_val == max_val) {
        print_int(1);
    } else {
        print_int(0);
    }
    print_clean("\n");
    
    print_clean("Complex XOR: ");
    if (max_val > 0) && !(min_val > 0) {
        print_int(1);
    } else {
        print_int(0);
    }
    print_clean("\n");
    
    // Nested logical operations
    print_clean("Nested logic: ");
    if ((max_val > 0) && (min_val < 0)) || ((max_val < 0) && (min_val > 0)) {
        print_int(1);
    } else {
        print_int(0);
    }
    print_clean("\n");
    
    // Comparison with zero
    let zero: i32 = 0;
    print_clean("Zero comparisons: ");
    if (zero == 0) && (zero >= 0) && (zero <= 0) && !(zero > 0) && !(zero < 0) {
        print_int(1);
    } else {
        print_int(0);
    }
    print_clean("\n");
    
    // Edge case: NOT operations
    print_clean("NOT operations: ");
    if !!(max_val > 0) && !(max_val < 0) {
        print_int(1);
    } else {
        print_int(0);
    }
    print_clean("\n");
    
    // Comparison chains
    print_clean("Comparison chain: ");
    if (min_val < zero) && (zero < max_val) {
        print_int(1);
    } else {
        print_int(0);
    }
    print_clean("\n");
}
