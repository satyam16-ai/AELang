name: ÆLang Compiler Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        gcc-version: [9, 10, 11]
        architecture: [32, 64]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-${{ matrix.gcc-version }} nasm
        sudo apt-get install -y gcc-multilib g++-multilib  # For 32-bit support
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${{ matrix.gcc-version }} 100
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install colorama pytest pytest-html pytest-cov
    
    - name: Build ÆLang compiler
      run: |
        cd compiler
        make clean
        make
    
    - name: Run compiler tests
      run: |
        chmod +x test_framework.py
        ./test_framework.py --verbose
    
    - name: Run pytest integration tests
      run: |
        python -m pytest test_pytest.py -v --tb=short
    
    - name: Generate test coverage report
      run: |
        python -m pytest test_pytest.py --cov=test_framework --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-gcc${{ matrix.gcc-version }}-${{ matrix.architecture }}bit
        path: |
          htmlcov/
          test_report.html
          coverage.xml
    
    - name: Test build with different architectures
      run: |
        # Test 32-bit builds
        ./build_clean.sh tests/basic/hello.ae 32
        
        # Test 64-bit builds  
        ./build_clean.sh tests/basic/hello.ae 64

  benchmark:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc nasm gcc-multilib
        pip install colorama pytest
    
    - name: Build compiler
      run: |
        cd compiler
        make clean
        make
    
    - name: Run benchmark tests
      run: |
        echo "Running performance benchmarks..."
        time ./test_framework.py --category basic
        time ./test_framework.py --category functions
        time ./test_framework.py --category control_flow

  integration:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc nasm gcc-multilib
        pip install colorama pytest
    
    - name: Build compiler
      run: |
        cd compiler
        make clean
        make
    
    - name: Test complex programs
      run: |
        # Test the comprehensive example
        ./build_clean.sh comprehensive_test.ae 32
        ./build_clean.sh comprehensive_test.ae 64
        
        # Test elif example
        ./build_clean.sh elif_test.ae 32
        ./build_clean.sh elif_test.ae 64
