extern print(format: str, ...);
extern read();

func main(): void {
    // ========== 32-BIT ARCHITECTURE TEST ==========
    print("=== 32-BIT COMPATIBLE TYPES ONLY ===\n");
    
    // 8-bit types
    print("Enter i8 value: ");
    let my_i8: i8 = read();
    print("i8: %d\n", my_i8);
    
    print("Enter u8 value: ");
    let my_u8: u8 = read();
    print("u8: %d\n", my_u8);
    
    // 16-bit types
    print("Enter i16 value: ");
    let my_i16: i16 = read();
    print("i16: %d\n", my_i16);
    
    print("Enter u16 value: ");
    let my_u16: u16 = read();
    print("u16: %d\n", my_u16);
    
    // 32-bit types
    print("Enter i32 value: ");
    let my_i32: i32 = read();
    print("i32: %d\n", my_i32);
    
    print("Enter u32 value: ");
    let my_u32: u32 = read();
    print("u32: %u\n", my_u32);
    
    // 32-bit float
    print("Enter f32 value: ");
    let my_f32: f32 = read();
    print("f32: %f\n", my_f32);
    
    // Custom types (f8/f16 should work in 32-bit)
    print("Enter f8 value: ");
    let my_f8: f8 = read();
    print("f8: %f\n", my_f8);
    
    print("Enter f16 value: ");
    let my_f16: f16 = read();
    print("f16: %f\n", my_f16);
    
    // Other types
    print("Enter num value: ");
    let my_num: num = read();
    print("num: %f\n", my_num);
    
    print("Enter bool value: ");
    let my_bool: bool = read();
    print("bool: %t\n", my_bool);
    
    print("Enter char value: ");
    let my_char: char = read();
    print("char: %c\n", my_char);
    
    print("\n=== 32-BIT TEST COMPLETE ===\n");
    print("All 32-bit compatible types tested successfully!\n");
}
