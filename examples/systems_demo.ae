extern print_int(val: i32);
extern print_float(val: f32);

func main(): void {
    print("=== ÆLang Systems Programming Demo ===");
    print("Memory-safe arithmetic with typed variables");
    print("");
    
    // TYPED VARIABLE DEMO
    let byte_val: i32 = 255;
    let word_val: i32 = 65535;
    let float_precision: f32 = 3.14159;
    
    print("System-level data types:");
    print("Byte value (255): ");
    print_int(byte_val);
    
    print("Word value (65535): ");
    print_int(word_val);
    
    print("Float precision: ");
    print_float(float_precision);
    
    print("");
    
    // BIT MANIPULATION DEMO (using multiplication/division for powers of 2)
    print("Bit manipulation (powers of 2):");
    let base: i32 = 1;
    let shift_left_3: i32 = base * 8;    // Simulate << 3
    let shift_right_1: i32 = shift_left_3 / 2;  // Simulate >> 1
    
    print("1 << 3 = ");
    print_int(shift_left_3);
    print("8 >> 1 = ");
    print_int(shift_right_1);
    
    print("");
    
    // FIXED-POINT ARITHMETIC DEMO
    print("Fixed-point arithmetic (scaled integers):");
    let fixed_a: i32 = byte_val * 100;  // 255.00 in fixed-point
    let fixed_b: i32 = 150 * 100;       // 150.00 in fixed-point
    let fixed_sum: i32 = fixed_a + fixed_b;
    
    print("255.00 + 150.00 = ");
    print_int(fixed_sum / 100);
    print(".");
    print_int(fixed_sum - ((fixed_sum / 100) * 100));
    
    print("");
    print("✓ Type safety enforced");
    print("✓ Integer overflow handling");
    print("✓ Float precision maintained");
    print("✓ Ready for OS development!");
}
